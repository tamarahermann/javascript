ДЗ 1 : Написати свою реалізацію функції isNaN. 

Умови виконання ДЗ : Не використовувати функції або інші матеріали які ми не вивчали. Намагайтесь робити ДЗ самостійно та не дивитися будь-які підказки.
Не викорисутовувати isNaN/ Number.isNaN.

Рішення :
function randomIsNan (value) {
    return typeof value === 'number' && value !== value;
}

console.log (randomIsNan (15));
console.log (randomIsNan ('hello'));
console.log (randomIsNan ('123456789'));
console.log (randomIsNan (NaN));
console.log (randomIsNan ('true'));
console.log (randomIsNan ('false'));
console.log (randomIsNan ('hgvhgch7868787'));


ДЗ 2 : Необхідно написати власну реалізацію функцій padEnd та padStart, але у вас повинна бути одна функція pad(‘qwerty’, ‘+’, true), яка приймає чотири аргументи:
- рядок, до якого буде додаватися символ;
- символ, який буде додаватися;
- скільки додавати символів;
- булеве значення, яке вказує, куди додавати символ (якщо true, то до початку, якщо false, то в кінець).
Останній аргумент повинен працювати як і в оригінальній функції, а саме якщо наш рядок з 5 символів, а ви вказуєте значення 6, то додаєте тільки один символ.

Умови виконання ДЗ : Функція повина повертати новий рядок. Не використовувати функції або інші матеріали, які ми не вивчали. Намагайтесь робити ДЗ самостійно.

Рішення :

function pad (str, char, count, addToStart) {
    if (typeof str !== 'string' || typeof char !== 'string' || typeof count !== 'number' || typeof addToStart !== 'boolean') {
        return null;
    }
    const currentLength = str.length;
    const neededCount = count > currentLength ? count - currentLength : 2;
    const padString = char.repeat (neededCount);
    return addToStart ? padString + str : str + padString;
}

const result = pad ('qwerty', '+', 6, true);
if (result !== null) {
    console.log (result);
}
else {
    console.error ('Error occured during execution.');
}

В цьому випадку при запуску коду в консолі отримала ++qwerty
Якщо при виклику коду замінити true на false (тобто const result = pad ('qwerty', '+', 6, false)), то в консолі отримаємо qwerty++



﻿ДЗ 3 : Перевірка теорії ймовірності. Напишіть функцію, яка буде генерувати певну кількість випадкових чисел в діапазоні від 100 до 1000 включно. 
Порахувати кількість парних та непарних серед них. Обчислити відсоткове співвідношення - чи буде воно близьке до 50%50? Приклад функції checkProbabilityTheory(count). 
Парметр count буде вказувати, скільки разів буде генеруватися випадкове число.

Умови виконання ДЗ : Функція виводить інформацію: 
Кількість згенерованих чисел: кількість чисел;
Парних чисел: кількість парних чисел;
Не парних чисел: кількість не парних чисел;
Відсоток парних до не парних: _
Не використовувати функції або інші матеріали, які ми не вивчали. Намагайтесь робити ДЗ самостійно та не дивитися підказки.

Рішення :
(щодо рішення цієї задачі не дуже впевнена, бо числові значення чомусь не мінялися саме в числа при запуску коду, 
хоча мені здається, що логіка виконання мала би бути вірна, прокоментуйте будь-ласка, де є упущення чи помилка з мого боку, бо довго ломала голову саме над цією задачею):

function checkTheory (count) {
    let totalNumbers = 0;
    let evenNumbers = 0; 
    let oddNumbers = 0;
    for (let i=0; i < count; i++){
        const randomNum =
        Math.floor (Math.random () * (1000-100+1)) +100;
        totalNumbers++;
        if (randomNumber % 2 == 0) {
            evenNumbers++;
        } else {
            oddNumbers++;
        }
        }
        const percentageEven = (evenNumbers / totalNumbers) * 100;
        const percentageOdd = (oddNumbers / totalNumbers) * 100;

console.log ('Кількість згенерованих чисел: ' + totalNumbers);
console.log ('Парних чисел:' + evenNumbers);
console.log ('Не парних чисел:' + oddNumbers);
console.log ('Відсоток парних до не парних:' + percentageEven : percentageOdd); 

}

